{"version":3,"sources":["images/plattsburgh-logo.jpg","images/super8festivals-logo.png","sections/HomeSection/index.tsx","components/NavbarTop/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","library","add","fab","fas","HomeSection","id","className","cursor","show","Delay","ms","style","borderBottom","icon","header","briefing","tools","languages","logo","super8festivalsLogo","logoAlt","cardTitle","cardDescription","cardFooter","cardUrl","plattsburghLogo","SkillColumn","props","size","map","tool","idx","key","lang","ExperienceCard","src","alt","undefined","href","target","rel","NavbarTop","div","initial","opacity","animate","exit","url","iconSize","NavbarItemIcon","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fab4788a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plattsburgh-logo.0d210268.jpg\";","module.exports = __webpack_public_path__ + \"static/media/super8festivals-logo.4cf26208.png\";","import React from \"react\";\r\nimport { library, IconProp } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Typist from \"react-typist\";\r\n\r\nimport \"./style.scss\";\r\nimport plattsburghLogo from \"../../images/plattsburgh-logo.jpg\";\r\nimport super8festivalsLogo from \"../../images/super8festivals-logo.png\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nlibrary.add(fab, fas);\r\n\r\nconst HomeSection = (): JSX.Element => {\r\n  return (\r\n    <section id=\"\" className=\"container-fluid\">\r\n      {/* Greeting */}\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"greeting text-center\">\r\n            <Typist cursor={{ show: false }}>\r\n              <h2 className=\"py-2\">\r\n                {/* Hi  */}\r\n                <span>Hi there!</span>\r\n                <Typist.Delay ms={500} />\r\n                {/* Name */}\r\n                &nbsp;\r\n                <span>\r\n                  I&apos;m{\" \"}\r\n                  <span style={{ borderBottom: \"3px solid orange\" }}>\r\n                    Michael\r\n                  </span>\r\n                  .\r\n                </span>\r\n              </h2>\r\n            </Typist>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Skills Header */}\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h3 className=\"text-center pb-4\">My Skills</h3>\r\n        </div>\r\n      </div>\r\n      {/* Skills Row */}\r\n      <div className=\"row\">\r\n        {/* Frontend Dev */}\r\n        <SkillColumn\r\n          icon=\"code\"\r\n          header=\"Frontend\"\r\n          briefing={`\r\nWhen I began my first programming business in 2014, I quickly fell in love with web technologies because they are intuitive. \r\nSince then, I have branched out to various engines and frameworks.\r\n`}\r\n          tools={[\"Node\", \"React\", \"Redux\", \"Zend\", \"jQuery\"]}\r\n          languages={[\"Javascript\", \"Typescript\", \"HTML\", \"CSS\", \"SASS/SCSS\"]}\r\n        />\r\n        {/* Backend Dev */}\r\n        <SkillColumn\r\n          icon=\"server\"\r\n          header=\"Backend\"\r\n          briefing={`\r\nStatic websites and applications are cool to look at, but the real magic happens when connected to a strong and stable backend.\r\n`}\r\n          tools={[\"Node\", \"Omeka\", \"MySQL\"]}\r\n          languages={[\"Javascript\", \"Typescript\", \"Java\", \"C#\", \"Python\"]}\r\n        />\r\n        {/* Software Dev */}\r\n        <SkillColumn\r\n          icon=\"compact-disc\"\r\n          header=\"Software\"\r\n          briefing={`\r\nI often find myself writing a 'quick tool' to automate mundane processes, but it grows and evolves into something bigger.\r\nFrom a Python script with a dozen lines to full-fledged Java application with a GUI.\r\n`}\r\n          tools={[\r\n            \"Jetbrains suite (e.g. IntelliJ, PHPStorm, Rider)\",\r\n            \"Travis CI\",\r\n            \"MySQL\",\r\n          ]}\r\n          languages={[\"Java\", \"C#\", \"Python\"]}\r\n        />\r\n        {/* Game Dev */}\r\n        <SkillColumn\r\n          icon=\"gamepad\"\r\n          header=\"Games\"\r\n          briefing={`\r\nI have had an interest for game development since I was a kid.\r\nShortly after I began writing mods for Minecraft, I moved into Unity to start hacking away at my own projects.\r\n`}\r\n          tools={[\"Unity\", \"Node.js (for RESTful backend)\", \"MySQL\", \"Blender\"]}\r\n          languages={[\"C#\"]}\r\n        />\r\n      </div>\r\n\r\n      {/* Experience header */}\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h3 className=\"text-center pb-4\">Professional Experience</h3>\r\n        </div>\r\n      </div>\r\n      {/* Experience */}\r\n      <div className=\"row mb-4\">\r\n        <div className=\"col d-flex justify-content-center\">\r\n          {/* Card Deck */}\r\n          <div className=\"card-deck\">\r\n            <ExperienceCard\r\n              logo={super8festivalsLogo}\r\n              logoAlt=\"Super8Festivals.org\"\r\n              cardTitle=\"Fullstack Developer\"\r\n              cardDescription=\"\"\r\n              cardFooter=\"October 2019 - Present\"\r\n              cardUrl=\"https://super8festivals.org/\"\r\n            />\r\n            <ExperienceCard\r\n              logo={plattsburghLogo}\r\n              logoAlt=\"plattsburgh.edu\"\r\n              cardTitle=\"Classroom &amp; Customer Support Services\"\r\n              cardDescription=\"\"\r\n              cardFooter=\"August 2016 - May 2020\"\r\n              cardUrl=\"https://plattsburgh.edu/\"\r\n            />\r\n          </div>\r\n          {/* End Card deck */}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Experience header */}\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h3 className=\"text-center m-4\">Projects</h3>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HomeSection;\r\n\r\nconst SkillColumn = (props: {\r\n  icon: IconProp;\r\n  header: string;\r\n  briefing: JSX.Element | string;\r\n  tools: (JSX.Element | string)[];\r\n  languages: (JSX.Element | string)[];\r\n}): JSX.Element => {\r\n  return (\r\n    <div className=\"col-sm-12 col-md-6 col-lg-3\">\r\n      {/* Icon */}\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <p className=\"m-0 py-3\">\r\n            <FontAwesomeIcon icon={props.icon} size=\"3x\" />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {/* Header */}\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>{props.header}</h4>\r\n        </div>\r\n      </div>\r\n      {/* Briefing */}\r\n      <div className=\"row\">\r\n        <div className=\"col\">{props.briefing}</div>\r\n      </div>\r\n      {/* Tools */}\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h5 className=\"py-2\">Tools</h5>\r\n          <ul>\r\n            {props.tools.map((tool, idx) => {\r\n              return <li key={idx}>{tool}</li>;\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      {/* Langs */}\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h5 className=\"py-2\">Languages</h5>\r\n          <ul>\r\n            {props.languages.map((lang, idx) => {\r\n              return <li key={idx}>{lang}</li>;\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ExperienceCard = (props: {\r\n  logo: string;\r\n  logoAlt: string;\r\n  cardTitle: string;\r\n  cardDescription: string;\r\n  cardFooter: string;\r\n  cardUrl?: string;\r\n}): JSX.Element => {\r\n  return (\r\n    <div className=\"experience-card\">\r\n      <div className=\"card\">\r\n        <img src={props.logo} className=\"card-img-top\" alt={props.logoAlt} />\r\n        <div className=\"card-body m-0 p-0\">\r\n          <h5 className=\"card-title\">{props.cardTitle}</h5>\r\n          <p className=\"card-text\">{props.cardDescription}</p>\r\n          <p className=\"card-text\">\r\n            <small className=\"text-muted\">{props.cardFooter}</small>\r\n          </p>\r\n        </div>\r\n        {props.cardUrl !== undefined && (\r\n          <a\r\n            href={props.cardUrl}\r\n            className=\"stretched-link\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          ></a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library, IconProp } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport \"./style.scss\";\r\n\r\nlibrary.add(fab, fas);\r\n\r\nexport const NavbarTop = (): JSX.Element => {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n    >\r\n      <div className=\"NavbarTop\">\r\n        <nav className=\"navbar navbar-expand navbar-light\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            <h1>Michael Gates</h1>\r\n            <p>Fullstack Developer</p>\r\n          </a>\r\n          <div className=\"collapse navbar-collapse\">\r\n            <div className=\"mr-auto\"></div>\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <NavbarItemIcon\r\n                  url=\"https://github.com/MichaelGatesDev/\"\r\n                  icon={[\"fab\", \"github\"]}\r\n                  iconSize=\"2x\"\r\n                />\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavbarItemIcon\r\n                  url=\"https://www.linkedin.com/in/michaelgatesdev/\"\r\n                  icon={[\"fab\", \"linkedin\"]}\r\n                  iconSize=\"2x\"\r\n                />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\ntype FontAwesomeIconSize =\r\n  | \"2x\"\r\n  | \"xs\"\r\n  | \"lg\"\r\n  | \"sm\"\r\n  | \"1x\"\r\n  | \"3x\"\r\n  | \"4x\"\r\n  | \"5x\"\r\n  | \"6x\"\r\n  | \"7x\"\r\n  | \"8x\"\r\n  | \"9x\"\r\n  | \"10x\"\r\n  | undefined;\r\nconst NavbarItemIcon = (props: {\r\n  url: string;\r\n  icon: IconProp;\r\n  iconSize: FontAwesomeIconSize;\r\n}): JSX.Element => {\r\n  return (\r\n    <a\r\n      className=\"nav-link\"\r\n      href={props.url}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      <FontAwesomeIcon icon={props.icon} size={props.iconSize} />\r\n    </a>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router\";\n\nimport HomeSection from \"./sections/HomeSection\";\nimport { NavbarTop } from \"./components/NavbarTop\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavbarTop />\n      <Switch>\n        <Route exact path=\"/\" component={HomeSection} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n  <HashRouter\n  // getUserConfirmation={optionalFunc}\n  // hashType={optionalString}\n  >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}